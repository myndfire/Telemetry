version: '3.4'

networks:
  tracing:
    name: tracing-network
    
services:
  rabbitmq:
    image: rabbitmq:3.6.15-management
    ports:
      - 15672:15672
      - 5672
    networks:
      - tracing

  sqlserver:
    image: "mcr.microsoft.com/azure-sql-edge"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "Pass@Word1"
      MSSQL_PID: "Developer"
      MSSQL_USER: "SA"
    ports:
      - 1433:1433
    networks:
      - tracing
  
  redis:
    image: redis:6.2.1
    ports:
    - 6379:6379
    networks:
      - tracing
    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - tracing

  kibana:
    depends_on:
    - elasticsearch
    environment:
      #ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_URL: http://elasticsearch:9200
      #ELASTICSEARCH_USERNAME: elastic
    image: docker.elastic.co/kibana/kibana:7.17.0
    networks:
      - tracing
    ports:
    - 5601:5601
    restart: unless-stopped


  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    restart: unless-stopped
    ports:
      - 5775:5775/udp
      - 5778:5778
      - 6831:6831/udp
      - 6832:6832/udp
      - 9411:9411
      - 14268:14268
      - 16686:16686
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
    networks:
      - tracing
    deploy:
      restart_policy: #bad workaround, just for demo only !!
        condition: on-failure


  app1:
    build:
      context: ./App1.WebApi
    ports:
      - "5000:80"
    networks:
      - tracing
    depends_on: 
      - rabbitmq
      - jaeger
      - app3
    environment:
      Jaeger__AgentHost: jaeger
      Jaeger__AgentPort: 6831
      RabbitMq__Host: rabbitmq
      App3Endpoint: http://app3/dummy

  app2:
    stdin_open: true
    tty: true
    build:
      context: ./App2.RabbitConsumer.Console
    networks:
      - tracing
    depends_on: 
      - rabbitmq
      - jaeger
      - app3
    entrypoint: ["./wait.sh", "30", "dotnet", "App2.RabbitConsumer.Console.dll"]
    environment:
      Jaeger__AgentHost: jaeger
      Jaeger__AgentPort: 6831
      RabbitMq__Host: rabbitmq
      App3UriEndpoint: http://app3


  app3:
    build:
      context: ./App3.WebApi
    ports:
      - "5001:80"
    networks:
      - tracing
    depends_on: 
      - rabbitmq
      - jaeger
      - sqlserver
    environment:
      Jaeger__AgentHost: jaeger
      Jaeger__AgentPort: 6831
      RabbitMq__Host: rabbitmq
      SqlDbConnString: server=sqlserver;user id=sa;password=Pass@Word1;
  


  app4:
    build:
      context: ./App4.RabbitConsumer.HostedService
    networks:
      - tracing
    depends_on: 
      - rabbitmq
      - jaeger
      - redis
    entrypoint: ["./wait.sh", "30", "dotnet", "App4.RabbitConsumer.HostedService.dll"]
    environment:
      Jaeger__AgentHost: jaeger
      Jaeger__AgentPort: 6831
      RabbitMq__Host: rabbitmq
      Redis__Host: redis
      Redis__Port: 6379

  